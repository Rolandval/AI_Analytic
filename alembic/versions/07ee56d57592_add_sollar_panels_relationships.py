"""add_sollar_panels_relationships

Revision ID: 07ee56d57592
Revises: 8f18cc016455
Create Date: 2025-05-19 11:28:02.806302

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '07ee56d57592'
down_revision: Union[str, None] = '8f18cc016455'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('batteries_brands',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_batteries_brands_id'), 'batteries_brands', ['id'], unique=False)
    op.create_table('batteries_suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_me', sa.Boolean(), nullable=True),
    sa.Column('is_supplier', sa.Boolean(), nullable=True),
    sa.Column('is_competitor', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_batteries_suppliers_id'), 'batteries_suppliers', ['id'], unique=False)
    op.create_table('sollar_panels_brands',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sollar_panels_brands_id'), 'sollar_panels_brands', ['id'], unique=False)
    op.create_table('sollar_panels_suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_me', sa.Boolean(), nullable=True),
    sa.Column('is_supplier', sa.Boolean(), nullable=True),
    sa.Column('is_competitor', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sollar_panels_suppliers_id'), 'sollar_panels_suppliers', ['id'], unique=False)
    op.create_table('sollar_panels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('power', sa.Float(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('panel_type', sa.String(), nullable=False),
    sa.Column('cell_type', sa.String(), nullable=False),
    sa.Column('thickness', sa.Float(), nullable=False),
    sa.Column('brand_id', sa.Integer(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['sollar_panels_brands.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['sollar_panels_suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sollar_panels_id'), 'sollar_panels', ['id'], unique=False)
    op.create_table('sollar_panels_current',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('power', sa.Float(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('panel_type', sa.String(), nullable=False),
    sa.Column('cell_type', sa.String(), nullable=False),
    sa.Column('thickness', sa.Float(), nullable=False),
    sa.Column('brand_id', sa.Integer(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['sollar_panels_brands.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['sollar_panels_suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sollar_panels_current_id'), 'sollar_panels_current', ['id'], unique=False)
    
    # Копіюємо дані зі старих таблиць у нові
    op.execute('INSERT INTO batteries_brands (id, name) SELECT id, name FROM brands')
    op.execute('INSERT INTO batteries_suppliers (id, name, is_me, is_supplier, is_competitor) SELECT id, name, is_me, is_supplier, is_competitor FROM suppliers')
    
    # Спочатку видаляємо зовнішні ключі
    op.drop_constraint('batteries_supplier_id_fkey', 'batteries', type_='foreignkey')
    op.drop_constraint('batteries_brand_id_fkey', 'batteries', type_='foreignkey')
    op.drop_constraint('current_batteries_brand_id_fkey', 'current_batteries', type_='foreignkey')
    op.drop_constraint('current_batteries_supplier_id_fkey', 'current_batteries', type_='foreignkey')
    
    # Створюємо нові зовнішні ключі
    op.create_foreign_key(None, 'batteries', 'batteries_brands', ['brand_id'], ['id'])
    op.create_foreign_key(None, 'batteries', 'batteries_suppliers', ['supplier_id'], ['id'])
    op.create_foreign_key(None, 'current_batteries', 'batteries_brands', ['brand_id'], ['id'])
    op.create_foreign_key(None, 'current_batteries', 'batteries_suppliers', ['supplier_id'], ['id'])
    
    # Тепер можемо видалити старі таблиці
    op.drop_index('ix_brands_id', table_name='brands')
    op.drop_table('brands')
    op.drop_index('ix_suppliers_id', table_name='suppliers')
    op.drop_table('suppliers')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'current_batteries', type_='foreignkey')
    op.drop_constraint(None, 'current_batteries', type_='foreignkey')
    op.create_foreign_key('current_batteries_supplier_id_fkey', 'current_batteries', 'suppliers', ['supplier_id'], ['id'])
    op.create_foreign_key('current_batteries_brand_id_fkey', 'current_batteries', 'brands', ['brand_id'], ['id'])
    op.drop_constraint(None, 'batteries', type_='foreignkey')
    op.drop_constraint(None, 'batteries', type_='foreignkey')
    op.create_foreign_key('batteries_brand_id_fkey', 'batteries', 'brands', ['brand_id'], ['id'])
    op.create_foreign_key('batteries_supplier_id_fkey', 'batteries', 'suppliers', ['supplier_id'], ['id'])
    op.create_table('brands',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='brands_pkey')
    )
    op.create_index('ix_brands_id', 'brands', ['id'], unique=False)
    op.create_table('suppliers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_me', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_supplier', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_competitor', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='suppliers_pkey')
    )
    op.create_index('ix_suppliers_id', 'suppliers', ['id'], unique=False)
    op.drop_index(op.f('ix_sollar_panels_current_id'), table_name='sollar_panels_current')
    op.drop_table('sollar_panels_current')
    op.drop_index(op.f('ix_sollar_panels_id'), table_name='sollar_panels')
    op.drop_table('sollar_panels')
    op.drop_index(op.f('ix_sollar_panels_suppliers_id'), table_name='sollar_panels_suppliers')
    op.drop_table('sollar_panels_suppliers')
    op.drop_index(op.f('ix_sollar_panels_brands_id'), table_name='sollar_panels_brands')
    op.drop_table('sollar_panels_brands')
    op.drop_index(op.f('ix_batteries_suppliers_id'), table_name='batteries_suppliers')
    op.drop_table('batteries_suppliers')
    op.drop_index(op.f('ix_batteries_brands_id'), table_name='batteries_brands')
    op.drop_table('batteries_brands')
    # ### end Alembic commands ###
