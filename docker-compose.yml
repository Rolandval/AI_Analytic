version: "3.8"

services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: db_user
      POSTGRES_PASSWORD: db_password
      POSTGRES_DB: db
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    command: postgres -c listen_addresses=* -c fsync=on -c full_page_writes=on
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U db_user"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command: celery -A app.celery_app worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
    networks:
      - app_network
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://db_user:db_password@postgres:5432/db

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command: celery -A app.celery_app beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
      - celery_worker
    networks:
      - app_network
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://db_user:db_password@postgres:5432/db

networks:
  app_network:
    driver: bridge
volumes:
  postgres_data:
    driver: local
